{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seanc\\\\OneDrive\\\\Documents\\\\Web Dev Learning\\\\React\\\\appointment-planner-starting-v18\\\\appointment-planner-starting-v18\\\\src\\\\containers\\\\contactsPage\\\\ContactsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsPage = _ref => {\n  _s();\n  let {\n    contacts,\n    handleNewContact\n  } = _ref;\n  const [currentName, setCurrentName] = useState(\"\");\n  const [currentPhone, setCurrentPhone] = useState(\"\");\n  const [currentEmail, setCurrentEmail] = useState(\"\");\n  const [duplicate, setDuplicate] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!duplicate) {\n      handleNewContact(currentName, currentPhone, currentEmail);\n      setCurrentName(\"\");\n      setCurrentPhone(\"\");\n      setCurrentEmail(\"\");\n    } else {\n      alert(\"Name taken. Please try again\");\n    }\n  };\n  useEffect(() => {\n    if (contacts.find(e => e.name === currentName)) {\n      setDuplicate(true);\n    } else {\n      setDuplicate(false);\n    }\n  }, [contacts, currentName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        name: currentName,\n        phone: currentPhone,\n        email: currentEmail,\n        setName: setCurrentName,\n        setPhone: setCurrentPhone,\n        setEmail: setCurrentEmail,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        data: contacts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactsPage, \"dMLNkI6HqhKJAer2b/zpmaQ51IQ=\");\n_c = ContactsPage;\nvar _c;\n$RefreshReg$(_c, \"ContactsPage\");","map":{"version":3,"names":["React","useState","useEffect","ContactForm","TileList","jsxDEV","_jsxDEV","ContactsPage","_ref","_s","contacts","handleNewContact","currentName","setCurrentName","currentPhone","setCurrentPhone","currentEmail","setCurrentEmail","duplicate","setDuplicate","handleSubmit","e","preventDefault","alert","find","name","children","fileName","_jsxFileName","lineNumber","columnNumber","phone","email","setName","setPhone","setEmail","data","_c","$RefreshReg$"],"sources":["C:/Users/seanc/OneDrive/Documents/Web Dev Learning/React/appointment-planner-starting-v18/appointment-planner-starting-v18/src/containers/contactsPage/ContactsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { ContactForm } from \"../../components/contactForm/ContactForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const ContactsPage = ({\r\n  contacts,\r\n  handleNewContact,\r\n}) => {\r\n  const [currentName, setCurrentName] = useState(\"\");\r\n  const [currentPhone, setCurrentPhone] = useState(\"\");\r\n  const [currentEmail, setCurrentEmail] = useState(\"\");\r\n  const [duplicate, setDuplicate] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!duplicate) {\r\n      handleNewContact(currentName, currentPhone, currentEmail);\r\n      setCurrentName(\"\");\r\n      setCurrentPhone(\"\");\r\n      setCurrentEmail(\"\");\r\n    } else {\r\n      alert(\"Name taken. Please try again\")\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (contacts.find(e => e.name === currentName)) {\r\n      setDuplicate(true);\r\n    } else {\r\n      setDuplicate(false);\r\n    }\r\n  }, [contacts, currentName]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Contact</h2>\r\n        <ContactForm\r\n          name={currentName}\r\n          phone={currentPhone}\r\n          email={currentEmail}\r\n          setName={setCurrentName}\r\n          setPhone={setCurrentPhone}\r\n          setEmail={setCurrentEmail}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Contacts</h2>\r\n        <TileList data={contacts} />\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,WAAW,QAAQ,0CAA0C;AACtE,SAASC,QAAQ,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAGtB;EAAAC,EAAA;EAAA,IAHuB;IAC3BC,QAAQ;IACRC;EACF,CAAC,GAAAH,IAAA;EACC,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMmB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAI,CAACJ,SAAS,EAAE;MACdP,gBAAgB,CAACC,WAAW,EAAEE,YAAY,EAAEE,YAAY,CAAC;MACzDH,cAAc,CAAC,EAAE,CAAC;MAClBE,eAAe,CAAC,EAAE,CAAC;MACnBE,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,MAAM;MACLM,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,CAACc,IAAI,CAACH,CAAC,IAAIA,CAAC,CAACI,IAAI,KAAKb,WAAW,CAAC,EAAE;MAC9CO,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACT,QAAQ,EAAEE,WAAW,CAAC,CAAC;EAE3B,oBACEN,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACpBxB,OAAA,CAACH,WAAW;QACVsB,IAAI,EAAEb,WAAY;QAClBmB,KAAK,EAAEjB,YAAa;QACpBkB,KAAK,EAAEhB,YAAa;QACpBiB,OAAO,EAAEpB,cAAe;QACxBqB,QAAQ,EAAEnB,eAAgB;QAC1BoB,QAAQ,EAAElB,eAAgB;QAC1BG,YAAY,EAAEA;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACM,eACVxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNxB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACjBxB,OAAA,CAACF,QAAQ;QAACgC,IAAI,EAAE1B;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV,CAAC;AAACrB,EAAA,CAlDWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}